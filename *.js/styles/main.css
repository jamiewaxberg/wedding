@charset "UTF-8";
html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
* {
  min-height: 0;
  min-width: 0; }

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

iframe {
  border: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* Bitters 0.10.0
 * http://bitters.bourbon.io
 * Copyright 2013â€“2014 thoughtbot, inc.
 * MIT License */
main {
  background-color: #fffffe; }

.row {
  max-width: 61.875em;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  padding: 3rem 0; }
  .row::after {
    clear: both;
    content: "";
    display: table; }

.wrapper {
  padding: 3rem 0; }

button,
input[type="submit"] {
  -webkit-font-smoothing: antialiased;
  background-color: #424242;
  border-radius: 3px;
  color: white;
  display: inline-block;
  font-size: 1em;
  font-weight: bold;
  line-height: 1;
  padding: 0.75em 1em;
  text-decoration: none; }
  button:hover,
  input[type="submit"]:hover {
    background-color: #292929;
    color: white; }
  button:disabled,
  input[type="submit"]:disabled {
    cursor: not-allowed;
    opacity: 0.5; }

.wrapper {
  *zoom: 1; }
  .wrapper:before, .wrapper:after {
    content: " ";
    display: table; }
  .wrapper:after {
    clear: both; }

textarea,
input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]),
select[multiple=multiple] {
  box-sizing: border-box;
  -ms-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box; }

.minor, .nav-btn, .modal, nav li {
  display: -moz-inline-stack;
  display: inline-block;
  _overflow: hidden;
  vertical-align: top;
  *vertical-align: auto;
  zoom: 1;
  *display: inline; }

@font-face {
  font-family: 'Brandon';
  src: url("../fonts/brandon_reg-webfont.eot");
  /* IE9 Compat Modes */
  src: url("../fonts/brandon_reg-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/brandon_reg-webfont.woff2") format("woff2"), url("../fonts/brandon_reg-webfont.woff") format("woff"), url("../fonts/brandon_reg-webfont.ttf") format("truetype"), url("../fonts/brandon_reg-webfont.svg#svgFontName") format("svg");
  /* Legacy iOS */
  font-weight: regular; }

@font-face {
  font-family: 'Brandon';
  src: url("../fonts/brandon_bld-webfont.eot");
  /* IE9 Compat Modes */
  src: url("../fonts/brandon_bld-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/brandon_bld-webfont.woff2") format("woff2"), url("../fonts/brandon_bld-webfont.woff") format("woff"), url("../fonts/brandon_bld-webfont.ttf") format("truetype"), url("../fonts/brandon_bld-webfont.svg#svgFontName") format("svg");
  /* Legacy iOS */
  font-weight: bold; }

body {
  -webkit-font-smoothing: antialiased;
  background-color: #FDFCFB;
  color: #424242;
  font-family: "Brandon", sans-serif;
  font-size: 1em;
  line-height: 1.5; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Brandon", Georgia, serif;
  line-height: 1.25;
  margin: 0;
  text-rendering: optimizeLegibility;
  text-transform: uppercase;
  letter-spacing: 1.1px;
  font-weight: 500; }

h1 {
  font-size: 2.25em; }

h2 {
  font-size: 2em;
  text-align: center;
  font-weight: bold; }

h3 {
  font-size: 1.75em; }

h4 {
  font-size: 1.5em; }

h5 {
  font-size: 1.25em; }

h6 {
  font-size: 1em; }

p {
  margin: 0 0 0.75em; }

a {
  transition: ease-in-out 0.2s;
  color: #424242;
  text-decoration: none;
  display: inline-block; }
  a:hover {
    color: #292929;
    text-decoration: underline; }
  a:active, a:focus {
    color: #292929;
    outline: none; }

h3 {
  text-align: center; }

hr {
  border-bottom: 1px solid #7b7570;
  border-left: none;
  border-right: none;
  border-top: none;
  margin: 1.5em 0; }

img,
picture {
  margin: 0;
  max-width: 100%; }

blockquote {
  border-left: 2px solid #7b7570;
  color: #686868;
  margin: 1.5em 0;
  padding-left: 0.75em; }

cite {
  color: #828282;
  font-style: italic; }
  cite:before {
    content: "\2014 \00A0"; }

fieldset {
  background: #948f8a;
  border: 1px solid #7b7570;
  margin: 0 0 0.75em 0;
  padding: 1.5em; }

input,
label,
select {
  display: block;
  font-family: "Brandon", sans-serif;
  font-size: 1em; }

label {
  font-weight: bold;
  margin-bottom: 0.375em; }
  label.required:after {
    content: "*"; }
  label abbr {
    display: none; }

textarea,
input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]), textarea,
select[multiple=multiple] {
  transition: border-color;
  background-color: white;
  border-radius: 3px;
  border: 1px solid #7b7570;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  font-family: "Brandon", sans-serif;
  font-size: 1em;
  margin-bottom: 0.75em;
  padding: 0.5em 0.5em;
  width: 100%; }
  textarea:hover,
  input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, input:not([type]):hover, textarea:hover,
  select[multiple=multiple]:hover {
    border-color: #605c58; }
  textarea:focus,
  input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, input:not([type]):focus, textarea:focus,
  select[multiple=multiple]:focus {
    border-color: #85B79D;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(117, 174, 144, 0.7);
    outline: none; }

textarea {
  resize: vertical; }

input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none; }

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 0.375em; }

input[type="file"] {
  padding-bottom: 0.75em;
  width: 100%; }

select {
  margin-bottom: 1.5em;
  max-width: 100%;
  width: auto; }

table {
  border-collapse: collapse;
  margin: 0.75em 0;
  table-layout: fixed;
  width: 100%; }

th {
  border-bottom: 1px solid #534f4c;
  font-weight: bold;
  padding: 0.75em 0;
  text-align: left; }

td {
  border-bottom: 1px solid #7b7570;
  padding: 0.75em 0; }

tr,
td,
th {
  vertical-align: middle; }

ul,
ol {
  margin: 0;
  padding: 0;
  list-style-type: none; }

dl {
  margin-bottom: 0.75em; }
  dl dt {
    font-weight: bold;
    margin-top: 0.75em; }
  dl dd {
    margin: 0; }

button,
input[type="submit"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  border: none;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: middle;
  white-space: nowrap; }

.major {
  padding: 20px 80px 16px;
  font-size: 20px;
  color: #85B79D;
  text-transform: uppercase;
  background: #fffffe;
  /* The Fallback */
  background: rgba(255, 255, 254, 0.7);
  border: 2px solid #85B79D;
  transition: all 200ms ease-in-out;
  font-weight: bold;
  line-height: 100%; }
  .major:hover {
    background: #85B79D;
    color: #FDFCFB; }

.minor {
  padding: 20px 74px 16px;
  font-size: 20px;
  color: #fffffe;
  text-transform: uppercase;
  border: 2px solid #fffffe;
  transition: all 200ms ease-in-out;
  font-weight: bold;
  margin: 0 auto; }
  .minor:hover {
    background: #fffffe;
    color: #FFDDDD; }

.nav-btn {
  padding: 10px 20px 8px;
  font-size: 14px;
  color: #85B79D;
  text-transform: uppercase;
  border: 2px solid #85B79D;
  transition: all 200ms ease-in-out;
  font-weight: bold;
  line-height: 100%; }
  .nav-btn:hover {
    background: #85B79D;
    color: #FDFCFB; }

.modal label {
  cursor: pointer;
  font-weight: normal;
  margin-bottom: 0; }

.modal iframe {
  position: absolute;
  top: 0;
  left: 0; }

.modal .modal-state {
  display: none; }

.modal .modal-content {
  min-height: 350px; }

.modal .modal-fade-screen {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.85);
  opacity: 0;
  transition: opacity 0.25s ease;
  visibility: hidden;
  z-index: 99999; }
  @media screen and (min-width: 53.75em) {
    .modal .modal-fade-screen {
      padding-top: 10em; } }

.modal .modal-bg {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  cursor: pointer; }

.modal .modal-close {
  cursor: pointer;
  position: absolute;
  z-index: 40;
  right: 20px;
  top: 10px; }

.modal .loading {
  position: absolute;
  width: 100px;
  top: 50%;
  left: 50%;
  margin-right: -50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.modal .modal-inner {
  background-color: #fff;
  margin: auto;
  max-height: 95%;
  overflow: auto;
  position: relative;
  top: 0.5em;
  transition: opacity 0.25s ease;
  width: 95%; }
  @media screen and (min-width: 40em) {
    .modal .modal-inner {
      max-height: 70%;
      width: 60%; } }
  @media screen and (min-width: 53.75em) {
    .modal .modal-inner {
      width: 70%; } }

.modal .modal-state:checked + .modal-fade-screen {
  opacity: 1;
  visibility: visible; }

.modal-open {
  overflow: hidden; }

.modal-closed {
  overflow: auto; }

nav {
  position: fixed;
  top: 5px;
  right: 5px;
  list-style-type: none;
  margin: 0px;
  padding: 0px;
  z-index: 40; }
  nav li {
    transition: ease-in-out 0.2s;
    background: #85B79D;
    font-size: 14px;
    text-transform: uppercase;
    margin-bottom: 5px;
    letter-spacing: -1px;
    padding: 7px 10px 5px; }
    nav li a, nav li a:hover, nav li a:focus {
      color: #FDFCFB;
      font-weight: 800; }
    nav li:hover, nav li.current {
      background: #65a483; }
    nav li.home {
      height: 34px; }
    nav li.home img {
      width: 18px; }
  nav .nav-modal {
    background: transparent;
    padding: 0; }

.hamburgerMenu {
  display: none; }

@media screen and (max-width: 769px) {
  .hamburgerMenu {
    display: block;
    width: 30px;
    height: 25px;
    float: right;
    margin-bottom: 10px;
    position: relative;
    display: inline-block;
    text-indent: -999px;
    border-top: 5px solid #85B79D;
    border-bottom: 5px solid #85B79D; }
    .hamburgerMenu:before {
      content: "";
      position: absolute;
      top: 5px;
      left: 0;
      width: 100%;
      border-top: 5px solid #85B79D; }
  nav ul {
    display: none;
    clear: both;
    transition: -webkit-transform 0.3s;
    transition: transform 0.3s;
    -webkit-transform: translate(0px, -225px);
            transform: translate(0px, -225px); }
  nav li {
    display: block; }
  nav.openmenu ul {
    display: block;
    -webkit-transform: translate(0px, 0);
            transform: translate(0px, 0); } }

.animate {
  width: 100%;
  overflow: hidden;
  background: #fffffe;
  position: relative;
  height: 100vh; }
  .animate canvas {
    z-index: 0; }

.contain {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0; }

.animatedButton {
  position: absolute;
  bottom: 10%;
  left: 50%;
  margin-right: -50%;
  -webkit-transform: translate(-50%, 0);
          transform: translate(-50%, 0); }
  .animatedButton .major {
    -webkit-animation: button 3s ease-in-out;
            animation: button 3s ease-in-out; }

.frame {
  position: relative;
  top: 40%;
  -webkit-transform: translateY(-40%);
  transform: translateY(-40%);
  margin: 0 auto;
  width: 575px;
  height: 233px;
  overflow: hidden;
  -webkit-animation: showbg 1.7s ease-in 0s;
          animation: showbg 1.7s ease-in 0s;
  color: #D17F6E;
  background: #fffffe;
  /* The Fallback */
  background: rgba(255, 255, 254, 0.5);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.circle {
  position: absolute;
  z-index: 10;
  height: 50px;
  width: 50px;
  top: 50%;
  left: 50%;
  margin-right: -50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  background: #CCE0BA;
  border-radius: 50%;
  -webkit-animation: circle 1s ease-in-out;
          animation: circle 1s ease-in-out;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.line, .lineLeft, .lineRight {
  position: absolute;
  z-index: 10;
  width: 198px;
  height: 3px;
  top: 115.5px;
  background: #CCE0BA;
  -webkit-transform: scaleX(0);
          transform: scaleX(0); }

.lineLeft {
  left: 8px;
  -webkit-transform-origin: 100% 50%;
          transform-origin: 100% 50%;
  -webkit-animation: lines 1s ease-in-out 0.8s, line-left 1s steps(1) 0.8s;
          animation: lines 1s ease-in-out 0.8s, line-left 1s steps(1) 0.8s; }

.lineRight {
  right: 8px;
  -webkit-transform-origin: 0% 50%;
          transform-origin: 0% 50%;
  -webkit-animation: lines 1s ease-in-out 0.8s, line-right 1s steps(1) 0.8s;
          animation: lines 1s ease-in-out 0.8s, line-right 1s steps(1) 0.8s; }

.bracket, .bracketLeft, .bracketRight {
  position: absolute;
  z-index: 10;
  height: 170px;
  width: 3px;
  top: 32px;
  background: #CCE0BA;
  -webkit-animation: bracket .4s ease-out 1.7s;
          animation: bracket .4s ease-out 1.7s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }
  .bracket:before, .bracketLeft:before, .bracketRight:before, .bracket:after, .bracketLeft:after, .bracketRight:after {
    position: absolute;
    display: block;
    content: '';
    width: 25px;
    height: 3px;
    background: #CCE0BA; }

.bracketLeft {
  left: 5px; }
  .bracketLeft:before {
    top: 0;
    left: 0;
    -webkit-transform-origin: 0% 50%;
            transform-origin: 0% 50%;
    -webkit-animation: bracket-line .2s ease-out 2.1s;
            animation: bracket-line .2s ease-out 2.1s;
    -webkit-animation-fill-mode: both;
            animation-fill-mode: both; }
  .bracketLeft:after {
    bottom: 0;
    left: 0;
    -webkit-transform-origin: 0% 50%;
            transform-origin: 0% 50%;
    -webkit-animation: bracket-line .2s ease-out 2.1s;
            animation: bracket-line .2s ease-out 2.1s;
    -webkit-animation-fill-mode: both;
            animation-fill-mode: both; }

.bracketRight {
  right: 5px; }
  .bracketRight:before {
    top: 0;
    right: 0;
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%;
    -webkit-animation: bracket-line .2s ease-out 2.1s;
            animation: bracket-line .2s ease-out 2.1s;
    -webkit-animation-fill-mode: both;
            animation-fill-mode: both; }
  .bracketRight:after {
    bottom: 0;
    right: 0;
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%;
    -webkit-animation: bracket-line .2s ease-out 2.1s;
            animation: bracket-line .2s ease-out 2.1s;
    -webkit-animation-fill-mode: both;
            animation-fill-mode: both; }

.big {
  position: absolute;
  top: 48px;
  width: 575px;
  text-align: center;
  font-weight: 800;
  font-size: 90px;
  color: #D17F6E;
  line-height: 75px;
  text-transform: uppercase;
  -webkit-animation: show 1.7s ease-out 0s;
          animation: show 1.7s ease-out 0s; }

.small, .smallTop, .smallBottom {
  position: absolute;
  z-index: 10;
  width: 575px;
  text-align: center;
  left: 0;
  font-weight: 300;
  font-size: 40px;
  color: #D17F6E;
  line-height: 55px;
  text-transform: uppercase; }

.smallTop {
  top: 0;
  -webkit-animation: small-top .5s ease-out 2.2s;
          animation: small-top .5s ease-out 2.2s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }

.smallBottom {
  bottom: -7px;
  -webkit-animation: small-bottom .5s ease-out 2.2s;
          animation: small-bottom .5s ease-out 2.2s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }

.hide, .hideTop, .hideBottom {
  position: absolute;
  z-index: 7;
  width: 570px;
  height: 86px;
  background: #fffffe;
  /* The Fallback */
  background: #fffffe;
  left: 0;
  -webkit-animation: reveal .4s ease-out 1.7s, show 1.7s ease-out 0s;
          animation: reveal .4s ease-out 1.7s, show 1.7s ease-out 0s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }

.hideTop {
  bottom: 49%;
  -webkit-transform-origin: 50% 0%;
          transform-origin: 50% 0%; }

.hideBottom {
  top: 49%;
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%; }

@media screen and (max-width: 600px) {
  .frame {
    width: 320px;
    height: 170px; }
  .big {
    font-size: 50px;
    width: 320px;
    line-height: 44px; }
  .small, .smallTop, .smallBottom {
    font-size: 30px;
    width: 320px;
    line-height: 43px; }
  .bracketLeft, .bracketRight {
    height: 115px; }
  .line, .lineLeft, .lineRight {
    top: 87px; } }

@-webkit-keyframes circle {
  0% {
    -webkit-transform: translate(-50%, -50%) scale(1);
            transform: translate(-50%, -50%) scale(1); }
  50% {
    -webkit-transform: translate(-50%, -50%) scale(1.2);
            transform: translate(-50%, -50%) scale(1.2); }
  90%, 100% {
    -webkit-transform: translate(-50%, -50%) scale(0);
            transform: translate(-50%, -50%) scale(0); } }

@keyframes circle {
  0% {
    -webkit-transform: translate(-50%, -50%) scale(1);
            transform: translate(-50%, -50%) scale(1); }
  50% {
    -webkit-transform: translate(-50%, -50%) scale(1.2);
            transform: translate(-50%, -50%) scale(1.2); }
  90%, 100% {
    -webkit-transform: translate(-50%, -50%) scale(0);
            transform: translate(-50%, -50%) scale(0); } }

@-webkit-keyframes lines {
  0% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); }
  50% {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); } }

@keyframes lines {
  0% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); }
  50% {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); } }

@-webkit-keyframes line-left {
  0% {
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%; }
  50%, 100% {
    -webkit-transform-origin: 0% 50%;
            transform-origin: 0% 50%; } }

@keyframes line-left {
  0% {
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%; }
  50%, 100% {
    -webkit-transform-origin: 0% 50%;
            transform-origin: 0% 50%; } }

@-webkit-keyframes line-right {
  0% {
    -webkit-transform-origin: 0% 50%;
            transform-origin: 0% 50%; }
  50%, 100% {
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%; } }

@keyframes line-right {
  0% {
    -webkit-transform-origin: 0% 50%;
            transform-origin: 0% 50%; }
  50%, 100% {
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%; } }

@-webkit-keyframes bracket {
  0% {
    -webkit-transform: scaleY(0);
            transform: scaleY(0); }
  100% {
    -webkit-transform: scaleY(1);
            transform: scaleY(1); } }

@keyframes bracket {
  0% {
    -webkit-transform: scaleY(0);
            transform: scaleY(0); }
  100% {
    -webkit-transform: scaleY(1);
            transform: scaleY(1); } }

@-webkit-keyframes bracket-line {
  0% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); }
  100% {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@keyframes bracket-line {
  0% {
    -webkit-transform: scaleX(0);
            transform: scaleX(0); }
  100% {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@-webkit-keyframes showbg {
  0% {
    background: #fffffe;
    /* The Fallback */
    background: rgba(255, 255, 254, 0); }
  20% {
    background: #fffffe;
    /* The Fallback */
    background: rgba(255, 255, 254, 0); }
  48% {
    background: #fffffe;
    /* The Fallback */
    background: rgba(255, 255, 254, 0.7); }
  100% {
    background: #fffffe;
    /* The Fallback */
    background: rgba(255, 255, 254, 0.7); } }

@keyframes showbg {
  0% {
    background: #fffffe;
    /* The Fallback */
    background: rgba(255, 255, 254, 0); }
  20% {
    background: #fffffe;
    /* The Fallback */
    background: rgba(255, 255, 254, 0); }
  48% {
    background: #fffffe;
    /* The Fallback */
    background: rgba(255, 255, 254, 0.7); }
  100% {
    background: #fffffe;
    /* The Fallback */
    background: rgba(255, 255, 254, 0.7); } }

@-webkit-keyframes show {
  0% {
    opacity: 0; }
  52% {
    opacity: 0; }
  53% {
    opacity: 1; }
  100% {
    opacity: 1; } }

@keyframes show {
  0% {
    opacity: 0; }
  52% {
    opacity: 0; }
  53% {
    opacity: 1; }
  100% {
    opacity: 1; } }

@-webkit-keyframes reveal {
  0% {
    -webkit-transform: scaleY(1);
            transform: scaleY(1); }
  100% {
    -webkit-transform: scaleY(0);
            transform: scaleY(0); } }

@keyframes reveal {
  0% {
    -webkit-transform: scaleY(1);
            transform: scaleY(1); }
  100% {
    -webkit-transform: scaleY(0);
            transform: scaleY(0); } }

@-webkit-keyframes small-top {
  0% {
    -webkit-transform: translateX(-20px);
            transform: translateX(-20px);
    opacity: 0; }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0);
    opacity: 1; } }

@keyframes small-top {
  0% {
    -webkit-transform: translateX(-20px);
            transform: translateX(-20px);
    opacity: 0; }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0);
    opacity: 1; } }

@-webkit-keyframes small-bottom {
  0% {
    -webkit-transform: translateX(20px);
            transform: translateX(20px);
    opacity: 0; }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0);
    opacity: 1; } }

@keyframes small-bottom {
  0% {
    -webkit-transform: translateX(20px);
            transform: translateX(20px);
    opacity: 0; }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0);
    opacity: 1; } }

@-webkit-keyframes button {
  0% {
    -webkit-transform: scaleY(0);
            transform: scaleY(0); }
  92% {
    -webkit-transform: scaleY(0);
            transform: scaleY(0); }
  100% {
    -webkit-transform: scaleY(1);
            transform: scaleY(1); } }

@keyframes button {
  0% {
    -webkit-transform: scaleY(0);
            transform: scaleY(0); }
  92% {
    -webkit-transform: scaleY(0);
            transform: scaleY(0); }
  100% {
    -webkit-transform: scaleY(1);
            transform: scaleY(1); } }

.introRow {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column; }
  @media screen and (min-width: 53.75em) {
    .introRow {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: row;
          flex-direction: row; } }

.introImg,
.introText {
  float: left;
  padding: 0 2rem;
  transition: all 0.2s ease-in-out;
  width: 100%; }

.introImg {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center; }
  @media screen and (min-width: 53.75em) {
    .introImg {
      width: 66.6666666667%; } }
  .introImg .imageWrapper {
    max-width: 32rem;
    max-height: 24rem;
    overflow: hidden; }

@media screen and (min-width: 53.75em) {
  .introText {
    width: 33.3333333333%; } }

.introText p {
  color: #424242;
  margin: 20px 0;
  padding-right: 20px;
  max-height: 315px; }

.slide {
  display: none; }
  .slide:first-of-type {
    display: -ms-flexbox;
    display: flex; }

.arrow-button {
  height: 2rem;
  width: 2rem;
  cursor: pointer;
  margin: 1rem; }
  .arrow-button:hover svg {
    transition: ease-in-out 0.2s;
    fill: #686868; }
  .arrow-button svg {
    fill: #424242; }

.venueWrapper a {
  padding: 0.5rem; }

.venueWrapper .sliderWrapper {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  padding: 2rem;
  -ms-flex-direction: column;
      flex-direction: column; }
  @media screen and (min-width: 53.75em) {
    .venueWrapper .sliderWrapper {
      -ms-flex-direction: row;
          flex-direction: row; } }
  .venueWrapper .sliderWrapper .imageWrapper {
    max-width: 60rem;
    max-height: 34rem;
    overflow: hidden; }
  .venueWrapper .sliderWrapper .slide {
    display: none; }
    .venueWrapper .sliderWrapper .slide:first-of-type {
      display: -ms-flexbox;
      display: flex; }
  .venueWrapper .sliderWrapper .arrow-button {
    height: 2rem;
    width: 2rem;
    cursor: pointer;
    margin: 1rem; }
    .venueWrapper .sliderWrapper .arrow-button:hover svg {
      transition: ease-in-out 0.2s;
      fill: #686868; }
    .venueWrapper .sliderWrapper .arrow-button svg {
      fill: #424242; }

.accommodationsWrapper ul {
  text-align: center;
  padding: 2rem 0; }
  .accommodationsWrapper ul li {
    font-size: 1.75em;
    padding: 1.5rem 0 0.75rem; }
    .accommodationsWrapper ul li:first-of-type {
      padding: 1rem 0; }
  .accommodationsWrapper ul p {
    font-size: 1.25em;
    margin: 0;
    color: #666; }
    .accommodationsWrapper ul p:last-of-type {
      margin-bottom: 0.25rem; }

footer {
  background: #85B79D;
  color: #fffffe; }
  footer .row {
    padding: 1.5rem 0; }
  footer p {
    margin: 0 1rem; }
    footer p:first-of-type {
      font-size: 1.25em;
      margin: 0 1rem 0.25rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
